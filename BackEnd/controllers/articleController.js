import { Article } from "../models/articleModel.js";

// üìå Obtener todos los art√≠culos (p√∫blico)
const getAllArticles = async (req, res) => {
  try {
    const articles = await Article.find().sort({ createdAt: -1 });
    res.json(articles);
  } catch (error) {
    res.status(500).json({ message: "Error al obtener art√≠culos" });
  }
};

// üìå Crear un nuevo art√≠culo (solo admin)
const createArticle = async (req, res) => {
  try {
    if (req.user.role !== "admin") return res.status(403).json({ message: "Acceso denegado" });

    const { title, content, imageUrl } = req.body;
    const newArticle = new Article({ title, content, imageUrl });

    await newArticle.save();
    res.status(201).json({ message: "Art√≠culo creado", article: newArticle });
  } catch (error) {
    res.status(500).json({ message: "Error al crear art√≠culo" });
  }
};

// üìå Editar un art√≠culo (solo admin)
const updateArticle = async (req, res) => {
  try {
    if (req.user.role !== "admin") return res.status(403).json({ message: "Acceso denegado" });

    const { title, content, imageUrl } = req.body;
    const article = await Article.findByIdAndUpdate(req.params.id, { title, content, imageUrl }, { new: true });

    if (!article) return res.status(404).json({ message: "Art√≠culo no encontrado" });

    res.json({ message: "Art√≠culo actualizado", article });
  } catch (error) {
    res.status(500).json({ message: "Error al actualizar art√≠culo" });
  }
};

// üìå Eliminar un art√≠culo (solo admin)
const deleteArticle = async (req, res) => {
  try {
    if (req.user.role !== "admin") return res.status(403).json({ message: "Acceso denegado" });

    const article = await Article.findByIdAndDelete(req.params.id);
    if (!article) return res.status(404).json({ message: "Art√≠culo no encontrado" });

    res.json({ message: "Art√≠culo eliminado" });
  } catch (error) {
    res.status(500).json({ message: "Error al eliminar art√≠culo" });
  }
};

export { 
    getAllArticles, 
    createArticle, 
    updateArticle, 
    deleteArticle 
};
